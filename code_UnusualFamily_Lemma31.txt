""" 
Computations used in Lemma 3.1 of the article "An unusual family of supersingular curves of genus five in characteristic two" by D. DragutinoviÄ‡
"""

# Lemma 3.1, Step1
from sage.all import *
F = GF(2)['a_1, a_2, a_3, a_4, a_5, a_6, a_7, a_8, b_1, b_2, b_3, b_4, b_5, b_6, b_7, b_8, b_9, b_10, b_11, b_12, a, b, c, d, e1, f1, g1, h1, i1, e2, f2, g2, h2, i2']
a_1, a_2, a_3, a_4, a_5, a_6, a_7, a_8, b_1, b_2, b_3, b_4, b_5, b_6, b_7, b_8, b_9, b_10, b_11, b_12, a, b, c, d, e1, f1, g1, h1, i1, e2, f2, g2, h2, i2 = F.gens()

G = F['X, Y, Z, T, U']
X, Y, Z, T, U = G.gens()

a = d = h1 = i2 = 1
b = c = i1 = h2 = 0

X1 = (a*d - b*c)*X + a*c*Y + b*d*Z
Y1 = a^2*Y + b^2*Z
Z1 = c^2*Y + d^2*Z
T1 = e1*X + f1*Y + g1*Z + h1*T + i1*U
U1 = e2*X + f2*Y + g2*Z + h2*T + i2*U

q1 = X1^2 + Y1*Z1
q2 = a_1*X1*Y1 + a_2*X1*Z1 + a_3*X1*T1 + a_4*Y1^2 + a_5*Y1*Z1 + a_6*Y1*T1 + a_7*Z1^2 + a_8*Z1*T1 + T1^2
q3 = b_1*X1*Y1 + b_2*X1*Z1 + b_3*X1*T1 + b_4*Y1^2 + b_5*Y1*Z1 + b_6*Y1*T1 + b_7*Z1^2 + b_8*Z1*T1 + b_9*X1*U1 + b_10*Y1*U1 + b_11*Z1*U1 + b_12*T1*U1 + U1^2 

print(q2, "\n")
#(a_3*e1 + e1^2)*X^2 + (a_6*e1 + a_3*f1 + a_1)*X*Y + (a_6*f1 + f1^2 + a_4)*Y^2 + (a_8*e1 + a_3*g1 + a_2)*X*Z + (a_8*f1 + a_6*g1 + a_5)*Y*Z + (a_8*g1 + g1^2 + a_7)*Z^2 + a_3*X*T + a_6*Y*T + a_8*Z*T + T^2 

print(q3)
#(b_12*e1*e2 + b_3*e1 + b_9*e2 + e2^2)*X^2 + (b_12*f1*e2 + b_12*e1*f2 + b_6*e1 + b_3*f1 + b_10*e2 + b_9*f2 + b_1)*X*Y + (b_12*f1*f2 + b_6*f1 + b_10*f2 + f2^2 + b_4)*Y^2 + (b_12*g1*e2 + b_12*e1*g2 + b_8*e1 + b_3*g1 + b_11*e2 + b_9*g2 + b_2)*X*Z + (b_12*g1*f2 + b_12*f1*g2 + b_8*f1 + b_6*g1 + b_11*f2 + b_10*g2 + b_5)*Y*Z + (b_12*g1*g2 + b_8*g1 + b_11*g2 + g2^2 + b_7)*Z^2 + (b_12*e2 + b_3)*X*T + (b_12*f2 + b_6)*Y*T + (b_12*g2 + b_8)*Z*T + (b_12*e1 + b_9)*X*U + (b_12*f1 + b_10)*Y*U + (b_12*g1 + b_11)*Z*U + b_12*T*U + U^2

"""************************************************"""

# Lemma 3.1, Step2

from sage.all import *
F = GF(2)['a_1, a_2, a_3, a_4, a_5, a_6, a_7, a_8, b_1, b_2, b_3, b_4, b_5, b_6, b_7, b_8, b_9, b_10, b_11, b_12, a, b, c, d, e1, f1, g1, h1, i1, e2, f2, g2, h2, i2']
a_1, a_2, a_3, a_4, a_5, a_6, a_7, a_8, b_1, b_2, b_3, b_4, b_5, b_6, b_7, b_8, b_9, b_10, b_11, b_12, a, b, c, d, e1, f1, g1, h1, i1, e2, f2, g2, h2, i2 = F.gens()

G = F['X, Y, Z, T, U']
X, Y, Z, T, U = G.gens()

a_4 = a_5 = a_7 = b_4 = b_5 = b_7 = 0

X1 = (a*d - b*c)*X + a*c*Y + b*d*Z
Y1 = a^2*Y + b^2*Z
Z1 = c^2*Y + d^2*Z
T1 = e1*X + f1*Y + g1*Z + h1*T + i1*U
U1 = e2*X + f2*Y + g2*Z + h2*T + i2*U

q1 = X1^2 + Y1*Z1
q2 = a_1*X1*Y1 + a_2*X1*Z1 + a_3*X1*T1 + a_4*Y1^2 + a_5*Y1*Z1 + a_6*Y1*T1 + a_7*Z1^2 + a_8*Z1*T1 + T1^2
q3 = b_1*X1*Y1 + b_2*X1*Z1 + b_3*X1*T1 + b_4*Y1^2 + b_5*Y1*Z1 + b_6*Y1*T1 + b_7*Z1^2 + b_8*Z1*T1 + b_9*X1*U1 + b_10*Y1*U1 + b_11*Z1*U1 + b_12*T1*U1 + U1^2 

print(q2, "\n")
#(a_3*b*c*e1 + a_3*a*d*e1 + e1^2)*X^2 + (a_1*a^2*b*c + a_2*b*c^3 + a_1*a^3*d + a_2*a*c^2*d + a_6*a^2*e1 + a_3*a*c*e1 + a_8*c^2*e1 + a_3*b*c*f1 + a_3*a*d*f1)*X*Y + (a_1*a^3*c + a_2*a*c^3 + a_6*a^2*f1 + a_3*a*c*f1 + a_8*c^2*f1 + f1^2)*Y^2 + (a_1*b^3*c + a_1*a*b^2*d + a_2*b*c*d^2 + a_2*a*d^3 + a_6*b^2*e1 + a_3*b*d*e1 + a_8*d^2*e1 + a_3*b*c*g1 + a_3*a*d*g1)*X*Z + (a_1*a*b^2*c + a_1*a^2*b*d + a_2*b*c^2*d + a_2*a*c*d^2 + a_6*b^2*f1 + a_3*b*d*f1 + a_8*d^2*f1 + a_6*a^2*g1 + a_3*a*c*g1 + a_8*c^2*g1)*Y*Z + (a_1*b^3*d + a_2*b*d^3 + a_6*b^2*g1 + a_3*b*d*g1 + a_8*d^2*g1 + g1^2)*Z^2 + (a_3*b*c*h1 + a_3*a*d*h1)*X*T + (a_6*a^2*h1 + a_3*a*c*h1 + a_8*c^2*h1)*Y*T + (a_6*b^2*h1 + a_3*b*d*h1 + a_8*d^2*h1)*Z*T + h1^2*T^2 + (a_3*b*c*i1 + a_3*a*d*i1)*X*U + (a_6*a^2*i1 + a_3*a*c*i1 + a_8*c^2*i1)*Y*U + (a_6*b^2*i1 + a_3*b*d*i1 + a_8*d^2*i1)*Z*U + i1^2*U^2 

print(q3)
#(b_3*b*c*e1 + b_3*a*d*e1 + b_9*b*c*e2 + b_9*a*d*e2 + b_12*e1*e2 + e2^2)*X^2 + (b_1*a^2*b*c + b_2*b*c^3 + b_1*a^3*d + b_2*a*c^2*d + b_6*a^2*e1 + b_3*a*c*e1 + b_8*c^2*e1 + b_3*b*c*f1 + b_3*a*d*f1 + b_10*a^2*e2 + b_9*a*c*e2 + b_11*c^2*e2 + b_9*b*c*f2 + b_9*a*d*f2 + b_12*f1*e2 + b_12*e1*f2)*X*Y + (b_1*a^3*c + b_2*a*c^3 + b_6*a^2*f1 + b_3*a*c*f1 + b_8*c^2*f1 + b_10*a^2*f2 + b_9*a*c*f2 + b_11*c^2*f2 + b_12*f1*f2 + f2^2)*Y^2 + (b_1*b^3*c + b_1*a*b^2*d + b_2*b*c*d^2 + b_2*a*d^3 + b_6*b^2*e1 + b_3*b*d*e1 + b_8*d^2*e1 + b_3*b*c*g1 + b_3*a*d*g1 + b_10*b^2*e2 + b_9*b*d*e2 + b_11*d^2*e2 + b_9*b*c*g2 + b_9*a*d*g2 + b_12*g1*e2 + b_12*e1*g2)*X*Z + (b_1*a*b^2*c + b_1*a^2*b*d + b_2*b*c^2*d + b_2*a*c*d^2 + b_6*b^2*f1 + b_3*b*d*f1 + b_8*d^2*f1 + b_6*a^2*g1 + b_3*a*c*g1 + b_8*c^2*g1 + b_10*b^2*f2 + b_9*b*d*f2 + b_11*d^2*f2 + b_10*a^2*g2 + b_9*a*c*g2 + b_11*c^2*g2 + b_12*g1*f2 + b_12*f1*g2)*Y*Z + (b_1*b^3*d + b_2*b*d^3 + b_6*b^2*g1 + b_3*b*d*g1 + b_8*d^2*g1 + b_10*b^2*g2 + b_9*b*d*g2 + b_11*d^2*g2 + b_12*g1*g2 + g2^2)*Z^2 + (b_3*b*c*h1 + b_3*a*d*h1 + b_9*b*c*h2 + b_9*a*d*h2 + b_12*h1*e2 + b_12*e1*h2)*X*T + (b_6*a^2*h1 + b_3*a*c*h1 + b_8*c^2*h1 + b_10*a^2*h2 + b_9*a*c*h2 + b_11*c^2*h2 + b_12*h1*f2 + b_12*f1*h2)*Y*T + (b_6*b^2*h1 + b_3*b*d*h1 + b_8*d^2*h1 + b_10*b^2*h2 + b_9*b*d*h2 + b_11*d^2*h2 + b_12*h1*g2 + b_12*g1*h2)*Z*T + (b_12*h1*h2 + h2^2)*T^2 + (b_3*b*c*i1 + b_3*a*d*i1 + b_9*b*c*i2 + b_9*a*d*i2 + b_12*i1*e2 + b_12*e1*i2)*X*U + (b_6*a^2*i1 + b_3*a*c*i1 + b_8*c^2*i1 + b_10*a^2*i2 + b_9*a*c*i2 + b_11*c^2*i2 + b_12*i1*f2 + b_12*f1*i2)*Y*U + (b_6*b^2*i1 + b_3*b*d*i1 + b_8*d^2*i1 + b_10*b^2*i2 + b_9*b*d*i2 + b_11*d^2*i2 + b_12*i1*g2 + b_12*g1*i2)*Z*U + (b_12*i1*h2 + b_12*h1*i2)*T*U + (b_12*i1*i2 + i2^2)*U^2

"""************************************************"""

# Lemma 3.1, Step3

from sage.all import *
F = GF(2)['a_1, a_2, a_3, a_4, a_5, a_6, a_7, a_8, b_1, b_2, b_3, b_4, b_5, b_6, b_7, b_8, b_9, b_10, b_11, b_12, a, b, c, d, e1, f1, g1, h1, i1, e2, f2, g2, h2, i2']
a_1, a_2, a_3, a_4, a_5, a_6, a_7, a_8, b_1, b_2, b_3, b_4, b_5, b_6, b_7, b_8, b_9, b_10, b_11, b_12, a, b, c, d, e1, f1, g1, h1, i1, e2, f2, g2, h2, i2 = F.gens()

G = F['X, Y, Z, T, U']
X, Y, Z, T, U = G.gens()

a_4 = a_5 = a_7 = b_4 = b_5 = b_7 = 0
a_6 = 0
c = 0
f1 = 0

X1 = (a*d - b*c)*X + a*c*Y + b*d*Z
Y1 = a^2*Y + b^2*Z
Z1 = c^2*Y + d^2*Z
T1 = e1*X + f1*Y + g1*Z + h1*T + i1*U
U1 = e2*X + f2*Y + g2*Z + h2*T + i2*U

q1 = X1^2 + Y1*Z1
q2 = a_1*X1*Y1 + a_2*X1*Z1 + a_3*X1*T1 + a_4*Y1^2 + a_5*Y1*Z1 + a_6*Y1*T1 + a_7*Z1^2 + a_8*Z1*T1 + T1^2
q3 = b_1*X1*Y1 + b_2*X1*Z1 + b_3*X1*T1 + b_4*Y1^2 + b_5*Y1*Z1 + b_6*Y1*T1 + b_7*Z1^2 + b_8*Z1*T1 + b_9*X1*U1 + b_10*Y1*U1 + b_11*Z1*U1 + b_12*T1*U1 + U1^2 

print(q2, "\n")
#(a_3*a*d*e1 + e1^2)*X^2 + a_1*a^3*d*X*Y + (a_1*a*b^2*d + a_2*a*d^3 + a_3*b*d*e1 + a_8*d^2*e1 + a_3*a*d*g1)*X*Z + a_1*a^2*b*d*Y*Z + (a_1*b^3*d + a_2*b*d^3 + a_3*b*d*g1 + a_8*d^2*g1 + g1^2)*Z^2 + a_3*a*d*h1*X*T + (a_3*b*d*h1 + a_8*d^2*h1)*Z*T + h1^2*T^2 + a_3*a*d*i1*X*U + (a_3*b*d*i1 + a_8*d^2*i1)*Z*U + i1^2*U^2 

print(q3)
#(b_3*a*d*e1 + b_9*a*d*e2 + b_12*e1*e2 + e2^2)*X^2 + (b_1*a^3*d + b_6*a^2*e1 + b_10*a^2*e2 + b_9*a*d*f2 + b_12*e1*f2)*X*Y + (b_10*a^2*f2 + f2^2)*Y^2 + (b_1*a*b^2*d + b_2*a*d^3 + b_6*b^2*e1 + b_3*b*d*e1 + b_8*d^2*e1 + b_3*a*d*g1 + b_10*b^2*e2 + b_9*b*d*e2 + b_11*d^2*e2 + b_9*a*d*g2 + b_12*g1*e2 + b_12*e1*g2)*X*Z + (b_1*a^2*b*d + b_6*a^2*g1 + b_10*b^2*f2 + b_9*b*d*f2 + b_11*d^2*f2 + b_10*a^2*g2 + b_12*g1*f2)*Y*Z + (b_1*b^3*d + b_2*b*d^3 + b_6*b^2*g1 + b_3*b*d*g1 + b_8*d^2*g1 + b_10*b^2*g2 + b_9*b*d*g2 + b_11*d^2*g2 + b_12*g1*g2 + g2^2)*Z^2 + (b_3*a*d*h1 + b_9*a*d*h2 + b_12*h1*e2 + b_12*e1*h2)*X*T + (b_6*a^2*h1 + b_10*a^2*h2 + b_12*h1*f2)*Y*T + (b_6*b^2*h1 + b_3*b*d*h1 + b_8*d^2*h1 + b_10*b^2*h2 + b_9*b*d*h2 + b_11*d^2*h2 + b_12*h1*g2 + b_12*g1*h2)*Z*T + (b_12*h1*h2 + h2^2)*T^2 + (b_3*a*d*i1 + b_9*a*d*i2 + b_12*i1*e2 + b_12*e1*i2)*X*U + (b_6*a^2*i1 + b_10*a^2*i2 + b_12*i1*f2)*Y*U + (b_6*b^2*i1 + b_3*b*d*i1 + b_8*d^2*i1 + b_10*b^2*i2 + b_9*b*d*i2 + b_11*d^2*i2 + b_12*i1*g2 + b_12*g1*i2)*Z*U + (b_12*i1*h2 + b_12*h1*i2)*T*U + (b_12*i1*i2 + i2^2)*U^2


"""************************************************"""

# Lemma 3.1, Final Steps

from sage.all import *
F = GF(2)['a_1, a_2, a_3, a_4, a_5, a_6, a_7, a_8, b_1, b_2, b_3, b_4, b_5, b_6, b_7, b_8, b_9, b_10, b_11, b_12, a, b, c, d, e1, f1, g1, h1, i1, e2, f2, g2, h2, i2']
a_1, a_2, a_3, a_4, a_5, a_6, a_7, a_8, b_1, b_2, b_3, b_4, b_5, b_6, b_7, b_8, b_9, b_10, b_11, b_12, a, b, c, d, e1, f1, g1, h1, i1, e2, f2, g2, h2, i2 = F.gens()

G = F['X, Y, Z, T, U']
X, Y, Z, T, U = G.gens()

b = c = e1 = f1 = g1 = i1 = e2 = f2 = g2 =  0 
h1 = i2 = 1
a_1 = a_8 = a = d = 1
a_6 = 0
a_2 = 0
a_4 = a_5 = a_7 = b_4 = b_5 = b_7 = 0

X1 = (a*d - b*c)*X + a*c*Y + b*d*Z
Y1 = a^2*Y + b^2*Z
Z1 = c^2*Y + d^2*Z
T1 = e1*X + f1*Y + g1*Z + h1*T + i1*U
U1 = e2*X + f2*Y + g2*Z + h2*T + i2*U

q1 = X1^2 + Y1*Z1
q2 = a_1*X1*Y1 + a_2*X1*Z1 + a_3*X1*T1 + a_4*Y1^2 + a_5*Y1*Z1 + a_6*Y1*T1 + a_7*Z1^2 + a_8*Z1*T1 + T1^2
q3 = b_1*X1*Y1 + b_2*X1*Z1 + b_3*X1*T1 + b_4*Y1^2 + b_5*Y1*Z1 + b_6*Y1*T1 + b_7*Z1^2 + b_8*Z1*T1 + b_9*X1*U1 + b_10*Y1*U1 + b_11*Z1*U1 + b_12*T1*U1 + U1^2 

print(q2, "\n")
#X*Y + a_3*X*T + Z*T + T^2 

print(q3, "\n")
#b_1*X*Y + b_2*X*Z + (b_9*h2 + b_3)*X*T + (b_10*h2 + b_6)*Y*T + (b_11*h2 + b_8)*Z*T + (b_12*h2 + h2^2)*T^2 + b_9*X*U + b_10*Y*U + b_11*Z*U + b_12*T*U + U^2 

print(q3 - b_1*q2)
#b_2*X*Z + (a_3*b_1 + b_9*h2 + b_3)*X*T + (b_10*h2 + b_6)*Y*T + (b_11*h2 + b_1 + b_8)*Z*T + (b_12*h2 + h2^2 + b_1)*T^2 + b_9*X*U + b_10*Y*U + b_11*Z*U + b_12*T*U + U^2
